factorial procedure started:
--------------------------------
Input: 5
1*1=1
2*1=2
3*2=6
4*6=24
5*24=120

Input: 12
1*1=1
2*1=2
3*2=6
4*6=24
5*24=120
6*120=720
7*720=5040
8*5040=40320
9*40320=362880
10*362880=3628800
11*3628800=39916800
12*39916800=479001600

Input: 30
1*1=1
2*1=2
3*2=6
4*6=24
5*24=120
6*120=720
7*720=5040
8*5040=40320
9*40320=362880
10*362880=3628800
11*3628800=39916800
12*39916800=479001600
13*479001600=6227020800
14*6227020800=87178291200
15*87178291200=1307674368000
16*1307674368000=20922789888000
17*20922789888000=355687428096000
18*355687428096000=6402373705728000
19*6402373705728000=121645100408832000
20*121645100408832000=2432902008176640000
21*2432902008176640000=51090942171709440000
22*51090942171709440000=1124000727777607680000
23*1124000727777607680000=25852016738884976640000
24*25852016738884976640000=620448401733239439360000
25*620448401733239439360000=15511210043330985984000000
26*15511210043330985984000000=403291461126605635584000000
27*403291461126605635584000000=10888869450418352160768000000
28*10888869450418352160768000000=304888344611713860501504000000
29*304888344611713860501504000000=8841761993739701954543616000000
30*8841761993739701954543616000000=265252859812191058636308480000000
--------------------------------

fibonacci procedure started:
--------------------------------
Input: 5
0 1 1 2 3 

Input: 14
0 1 1 2 3 5 8 13 21 34 55 89 144 233 
--------------------------------

update_price_by_cat procedure started:
--------------------------------
Number of updated rows: 70
Error handling:
Category does not exist.
--------------------------------

update_price_under_avg procedure started: 
--------------------------------
Average price of products: $937.62
Number of updated rows: 199
--------------------------------

product_price_report procedure started:
--------------------------------
Cheap: 84
Fair: 201
Expensive: 3
--------------------------------



PL/SQL procedure successfully completed.

